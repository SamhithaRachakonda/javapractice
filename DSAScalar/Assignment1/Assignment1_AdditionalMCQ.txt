1. How many elements are there between [135, 246] (inclusive of them) ?

A). 111
B). 112    >
C). 113
D). 114
Answer: B
Since [135, 246] = 246-135+1 = 112

2. Find the total number of iterations in the following code:

    void solve(int N, int M){
        int count = 0;
        for (int i = 1; i <= N; i++){
            if (N % i == 0)
                count++;
        }
        for (int i = 1; i <= M; i++){
            if (M % i == 0)
                count++;
        }
        print count;
    }

A). N
B). N+M >
C). M
D). N/2 + M/2
Answer: B
Since the for loops are independent and not nested loops, add the operations.
    => first loop [1, N] + second loop [1, M]
    =  N - 1 + 1         + M - 1 + 1
    =  N + M.

3. Find the total number of iterations in the following code snippet:
NOTE: ^ denotes power, not Bitwise XOR.

    for (int i = 1; i <= n; i++){
        for (int j = 1; j <= 3 ^ i; j++){
            print(i + j);
        }
    }

A). n^3 times.
B). 3 + 9 + 27 + .... + 3^n times.  >
C). 3^n times.
D). n * (3^n) times.
Answer: B
Since it is nested loop, multiply the operations.
    => 1 * (3^1 loops) + 1 * (3^2 loops) + 1 * (3^3 loops) + ..... + 1 * (3^n loops)
    =  3 + 9 + 27 + ..... + 3^n.